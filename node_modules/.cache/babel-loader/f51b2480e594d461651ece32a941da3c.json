{"ast":null,"code":"var _jsxFileName = \"/home/workspace/react-hooks/sessions/making-api-call-with-hooks-part-2-final/src/components/Leaderboard/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport LeaderboardTable from \"../LeaderboardTable\";\nimport { LeaderboardContainer, LoadingViewContainer, ErrorMessage } from \"./styledComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: \"INITIAL\",\n  inProgress: \"IN_PROGRESS\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\"\n};\n\nconst Leaderboard = () => {\n  _s();\n\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    data: null,\n    errorMsg: null\n  });\n  useEffect(() => {\n    const getLeaderboardData = async () => {\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        data: null,\n        errorMsg: null\n      });\n      const url = \"https://apis.ccbp.in/leaderboard\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU\"\n        }\n      };\n      const response = await fetch(url, options);\n      const responseData = await response.json();\n      const formattedLeaderboardData = responseData.leaderboard_data.map(eachUser => ({\n        id: eachUser.id,\n        rank: eachUser.rank,\n        name: eachUser.name,\n        profileImgUrl: eachUser.profile_image_url,\n        score: eachUser.score,\n        language: eachUser.language,\n        timeSpent: eachUser.time_spent\n      }));\n\n      if (response.ok) {\n        setApiResponse({\n          status: apiStatusConstants.success,\n          data: formattedLeaderboardData\n        });\n      } else {\n        setApiResponse({\n          status: apiStatusConstants.failure,\n          errorMsg: responseData.error_msg\n        });\n      }\n    };\n\n    getLeaderboardData();\n  }, []);\n\n  const renderFailureView = () => {\n    const {\n      errorMsg\n    } = apiResponse;\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderSuccessView = () => {\n    const {\n      data\n    } = apiResponse;\n    return /*#__PURE__*/_jsxDEV(LeaderboardTable, {\n      leaderboardData: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderLoadingView = () => /*#__PURE__*/_jsxDEV(LoadingViewContainer, {\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      color: \"#ffffff\",\n      height: \"50\",\n      width: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n\n  const renderLeaderboard = () => {\n    const {\n      status\n    } = apiResponse;\n\n    switch (status) {\n      case apiStatusConstants.success:\n        return renderSuccessView();\n\n      case apiStatusConstants.failure:\n        return renderFailureView();\n\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LeaderboardContainer, {\n    children: renderLeaderboard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Leaderboard, \"LcejUL5Z8gTq0/4EosyqIhBfGKM=\");\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["useState","useEffect","Loader","LeaderboardTable","LeaderboardContainer","LoadingViewContainer","ErrorMessage","apiStatusConstants","initial","inProgress","success","failure","Leaderboard","apiResponse","setApiResponse","status","data","errorMsg","getLeaderboardData","url","options","method","headers","Authorization","response","fetch","responseData","json","formattedLeaderboardData","leaderboard_data","map","eachUser","id","rank","name","profileImgUrl","profile_image_url","score","language","timeSpent","time_spent","ok","error_msg","renderFailureView","renderSuccessView","renderLoadingView","renderLeaderboard"],"sources":["/home/workspace/react-hooks/sessions/making-api-call-with-hooks-part-2-final/src/components/Leaderboard/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport LeaderboardTable from \"../LeaderboardTable\";\n\nimport {\n  LeaderboardContainer,\n  LoadingViewContainer,\n  ErrorMessage,\n} from \"./styledComponents\";\n\nconst apiStatusConstants = {\n  initial: \"INITIAL\",\n  inProgress: \"IN_PROGRESS\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\",\n};\n\nconst Leaderboard = () => {\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    data: null,\n    errorMsg: null,\n  });\n\n  useEffect(() => {\n    const getLeaderboardData = async () => {\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        data: null,\n        errorMsg: null,\n      });\n\n      const url = \"https://apis.ccbp.in/leaderboard\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          Authorization:\n            \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU\",\n        },\n      };\n\n      const response = await fetch(url, options);\n      const responseData = await response.json();\n      const formattedLeaderboardData = responseData.leaderboard_data.map(\n        (eachUser) => ({\n          id: eachUser.id,\n          rank: eachUser.rank,\n          name: eachUser.name,\n          profileImgUrl: eachUser.profile_image_url,\n          score: eachUser.score,\n          language: eachUser.language,\n          timeSpent: eachUser.time_spent,\n        })\n      );\n      if (response.ok) {\n        setApiResponse({\n          status: apiStatusConstants.success,\n          data: formattedLeaderboardData,\n        });\n      } else {\n        setApiResponse({\n          status: apiStatusConstants.failure,\n          errorMsg: responseData.error_msg,\n        });\n      }\n    };\n\n    getLeaderboardData();\n  }, []);\n\n  const renderFailureView = () => {\n    const { errorMsg } = apiResponse;\n    return <ErrorMessage>{errorMsg}</ErrorMessage>;\n  };\n\n  const renderSuccessView = () => {\n    const { data } = apiResponse;\n    return <LeaderboardTable leaderboardData={data} />;\n  };\n\n  const renderLoadingView = () => (\n    <LoadingViewContainer>\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </LoadingViewContainer>\n  );\n\n  const renderLeaderboard = () => {\n    const { status } = apiResponse;\n\n    switch (status) {\n      case apiStatusConstants.success:\n        return renderSuccessView();\n      case apiStatusConstants.failure:\n        return renderFailureView();\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n      default:\n        return null;\n    }\n  };\n\n  return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>;\n};\n\nexport default Leaderboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}